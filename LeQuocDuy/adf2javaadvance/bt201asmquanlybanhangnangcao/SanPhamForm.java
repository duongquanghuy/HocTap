/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package adf2javaadvance.bt201asmquanlybanhangnangcao;

import static adf2javaadvance.bt201asmquanlybanhangnangcao.DangNhapVaDangKyForm.menuChuongTrinhForm;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.*;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Duy Lumiere
 */
public class SanPhamForm extends javax.swing.JFrame {

    DefaultTableModel tableModel;

    int chiSoHienTai = -1;
    boolean banGhiSanPhamDuocChon = false;
    String maSanPhamDuocChon;

    List<SanPham> danhSachSanPham = new ArrayList<>();
    List<SanPham> danhSachSanPhamTimKiemMdm = new ArrayList<>();

    /**
     * Creates new form SanPhamForm
     */
    private final String regexDate = "[0-9]{1,4}-[0-9]{1,2}-[0-9]{1,2}";
    private final String regexCost = "[0-9]{1,}";

    public SanPhamForm() {
        initComponents();
        this.addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosing(java.awt.event.WindowEvent windowEvent) {
                menuChuongTrinhForm.setVisible(true);
            }
        });

        tableModel = (DefaultTableModel) tblSanPham.getModel();

        laySanPhamTuCsdl();
        hienThiSanPhamTrongBang(1);

        tblSanPham.addMouseListener(new MouseListener() {
            @Override
            public void mouseClicked(MouseEvent e) {
                if (e.getClickCount() == 2) {
                    chiSoHienTai = tblSanPham.getSelectedRow();
                    SanPham sp = danhSachSanPham.get(chiSoHienTai);

                    banGhiSanPhamDuocChon = true;

                    txtMaSanPham.setText(sp.getMaSanPham());
                    txtMaDanhMuc.setText(sp.getMaDanhMuc());
                    txtTenSanPham.setText(sp.getTenSanPham());
                    txtGia.setText(sp.getGia());
                    txtNgayNhap.setText(sp.getNgayNhap());
                    txtNgayBan.setText(sp.getNgayBan());
                    txtHsd.setText(sp.getHanSuDung());
                    txtMoTaSanPham.setText(sp.getMoTaSanPham());

                    maSanPhamDuocChon = sp.getMaSanPham();
                }
            }

            @Override
            public void mousePressed(MouseEvent e) {
            }

            @Override
            public void mouseReleased(MouseEvent e) {
            }

            @Override
            public void mouseEntered(MouseEvent e) {
            }

            @Override
            public void mouseExited(MouseEvent e) {
            }

        });
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtMaSanPham = new javax.swing.JTextField();
        txtMaDanhMuc = new javax.swing.JTextField();
        txtTenSanPham = new javax.swing.JTextField();
        txtGia = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtMoTaSanPham = new javax.swing.JTextArea();
        jLabel8 = new javax.swing.JLabel();
        btnThemSp = new javax.swing.JButton();
        btnSuaSp = new javax.swing.JButton();
        btnXoaSp = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        cbBoLoc = new javax.swing.JComboBox<>();
        btnTimKiemMsp = new javax.swing.JButton();
        btnTimKiemMdm = new javax.swing.JButton();
        btnTimKiemTenSp = new javax.swing.JButton();
        txtNgayBan = new javax.swing.JTextField();
        txtNgayNhap = new javax.swing.JTextField();
        txtHsd = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblSanPham = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Sản Phẩm", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 3, 17))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Segoe UI", 2, 15)); // NOI18N
        jLabel1.setText("Mã Sản Phẩm:");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 2, 15)); // NOI18N
        jLabel2.setText("Mã Danh Mục:");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 2, 15)); // NOI18N
        jLabel3.setText("Tên Sản Phẩm:");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 2, 15)); // NOI18N
        jLabel4.setText("Giá:");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 2, 15)); // NOI18N
        jLabel5.setText("Ngày Nhập:");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 2, 15)); // NOI18N
        jLabel6.setText("Ngày Bán:");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 2, 15)); // NOI18N
        jLabel7.setText("Mô Tả Sản Phẩm:");

        txtMaSanPham.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N

        txtMaDanhMuc.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N

        txtTenSanPham.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N

        txtGia.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N

        txtMoTaSanPham.setColumns(20);
        txtMoTaSanPham.setRows(5);
        jScrollPane1.setViewportView(txtMoTaSanPham);

        jLabel8.setFont(new java.awt.Font("Segoe UI", 2, 15)); // NOI18N
        jLabel8.setText("Hạn Sử Dụng:");

        btnThemSp.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        btnThemSp.setText("Thêm");
        btnThemSp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemSpActionPerformed(evt);
            }
        });

        btnSuaSp.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        btnSuaSp.setText("Sửa");
        btnSuaSp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaSpActionPerformed(evt);
            }
        });

        btnXoaSp.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        btnXoaSp.setText("Xóa");
        btnXoaSp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaSpActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Segoe UI", 2, 15)); // NOI18N
        jLabel9.setText("Bộ Lọc:");

        cbBoLoc.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        cbBoLoc.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--------------------------", "Danh Mục Sản Phẩm", "Hạn Sử Dụng (CÒN HẠN)", "Hạn Sử Dụng (HẾT HẠN)", "Sản Phẩm SẮP HẾT HẠN", "Sản Phẩm ĐÃ BÁN", "Sản Phẩm TỒN KHO" }));
        cbBoLoc.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbBoLocItemStateChanged(evt);
            }
        });

        btnTimKiemMsp.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        btnTimKiemMsp.setText("Tìm Kiếm (theo MSP)");
        btnTimKiemMsp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimKiemMspActionPerformed(evt);
            }
        });

        btnTimKiemMdm.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        btnTimKiemMdm.setText("Tìm Kiếm (theo MDM)");
        btnTimKiemMdm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimKiemMdmActionPerformed(evt);
            }
        });

        btnTimKiemTenSp.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        btnTimKiemTenSp.setText("Tìm Kiếm (Theo Tên SP)");
        btnTimKiemTenSp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimKiemTenSpActionPerformed(evt);
            }
        });

        txtNgayBan.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N

        txtNgayNhap.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N

        txtHsd.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(110, 110, 110)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel7)
                    .addComponent(jLabel6)
                    .addComponent(jLabel5)
                    .addComponent(jLabel3)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jLabel4)
                    .addComponent(jLabel8))
                .addGap(87, 87, 87)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(txtGia)
                                        .addGap(108, 108, 108)
                                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(txtTenSanPham, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 401, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnTimKiemTenSp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cbBoLoc, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btnThemSp, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(82, 82, 82)
                                .addComponent(btnSuaSp, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 77, Short.MAX_VALUE)
                                .addComponent(btnXoaSp, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtMaDanhMuc, javax.swing.GroupLayout.DEFAULT_SIZE, 203, Short.MAX_VALUE)
                                    .addComponent(txtMaSanPham))
                                .addGap(205, 205, 205)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnTimKiemMdm, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnTimKiemMsp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addComponent(jScrollPane1))
                        .addGap(101, 101, 101))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtNgayBan, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtNgayNhap, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtHsd, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtMaSanPham, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnTimKiemMsp))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(txtMaDanhMuc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnTimKiemMdm))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtTenSanPham, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnTimKiemTenSp))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtGia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(txtNgayNhap, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(txtNgayBan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(txtHsd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(cbBoLoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(144, 144, 144)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnThemSp)
                    .addComponent(btnXoaSp)
                    .addComponent(btnSuaSp))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tblSanPham.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Mã Sản Phẩm", "Mã Danh Mục", "Tên Sản Phẩm", "Giá", "Ngày Nhập", "Ngày Bán", "Hạn Sử Dụng", "Mô Tả SP"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblSanPham.setColumnSelectionAllowed(true);
        tblSanPham.setRowHeight(30);
        tblSanPham.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tblSanPham.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(tblSanPham);
        tblSanPham.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 332, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void laySanPhamTuCsdl() {
        danhSachSanPham.clear();

        try {
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/bt201quanlybanhang?useUnicode=true&characterEncoding=UTF-8&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC", "root", "");

            String sqlSel = "select * from cosmetics";

            Statement st = conn.createStatement();

            ResultSet rs = st.executeQuery(sqlSel);

            while (rs.next()) {
                SanPham sanPham = new SanPham(rs.getString("cosmeticId"), rs.getString("categoryId"), rs.getString("cosmeticName"),
                        rs.getString("cosmeticCost"), rs.getString("cosmeticInDate"), rs.getString("cosmeticSellDate"), rs.getString("cosmeticExpDate"), rs.getString("cosmeticDetail"));
                danhSachSanPham.add(sanPham);
            }
            rs.close();
            st.close();
            conn.close();

        } catch (SQLException ex) {
            Logger.getLogger(SanPhamForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void hienThiSanPhamTrongBang(int loaiHienThi) {
        /*Loại Hiển thị: 
            1 - Hiển thị mặc định
            2 - Hiển thị theo khung Tìm theo Mã Danh Mục
            
        
         */
        tableModel.setRowCount(0);
        
        if (loaiHienThi == 1) {
            danhSachSanPham.forEach((sp) -> {
                tableModel.addRow(new Object[]{sp.getMaSanPham(), sp.getMaDanhMuc(), sp.getTenSanPham(), sp.getGia(),
                    sp.getNgayNhap(), sp.getNgayBan(), sp.getHanSuDung(), sp.getMoTaSanPham()});
            });
            return;
        }
        
        if (loaiHienThi == 2) {
            danhSachSanPhamTimKiemMdm.forEach((sp) -> {
                tableModel.addRow(new Object[]{sp.getMaSanPham(), sp.getMaDanhMuc(), sp.getTenSanPham(), sp.getGia(),
                    sp.getNgayNhap(), sp.getNgayBan(), sp.getHanSuDung(), sp.getMoTaSanPham()});
            });
            return;
        }
    }

    private void btnSuaSpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaSpActionPerformed
        if (banGhiSanPhamDuocChon) {
            banGhiSanPhamDuocChon = false;
            int xacNhanSua = JOptionPane.showConfirmDialog(rootPane, "Bạn có chắc muốn Sửa Sản Phẩm này theo các thông tin đã nhập?", "Cảnh Báo", 2);
            if (xacNhanSua == JOptionPane.YES_OPTION) {

                if (txtMaSanPham.getText().isEmpty()) {
                    JOptionPane.showMessageDialog(rootPane, "Bạn chưa nhập Mã Sản Phẩm!", "Thông Báo", 1);
                    return;
                }

                if (txtTenSanPham.getText().isEmpty()) {
                    JOptionPane.showMessageDialog(rootPane, "Bạn chưa nhập Tên Sản Phẩm!", "Thông Báo", 1);
                    return;
                }

                if (txtGia.getText().isEmpty()) {
                    JOptionPane.showMessageDialog(rootPane, "Bạn chưa nhập Giá!", "Thông Báo", 1);
                    return;
                }

                if (txtNgayNhap.getText().isEmpty()) {
                    JOptionPane.showMessageDialog(rootPane, "Bạn chưa nhập Ngày Nhập!", "Thông Báo", 1);
                    return;
                }

                if (txtHsd.getText().isEmpty()) {
                    JOptionPane.showMessageDialog(rootPane, "Bạn chưa nhập Hạn Sử Dụng!", "Thông Báo", 1);
                    return;
                }

                if (kiemTraNgayThang(txtNgayNhap.getText()) && kiemTraNgayThang(txtHsd.getText()) && txtGia.getText().matches(regexCost)) {
                    if (txtNgayBan.getText().isEmpty()) {
                        capNhatSanPham();
                    } else {
                        if (kiemTraNgayThang(txtNgayBan.getText())) {
                            capNhatSanPham();
                        }
                    }
                } else {
                    if (!txtGia.getText().matches(regexCost)) {
                        JOptionPane.showMessageDialog(rootPane, "Giá phải là Giá Trị SỐ!", "Thông Báo", 1);
                    }
                }
            } else {
                JOptionPane.showMessageDialog(rootPane, "Không có bất kỳ sự Thay Đổi Dữ Liệu nào đã diễn ra", "Thông Báo", 1);
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Bạn chưa chọn đối tượng nào để Sửa!\nVui lòng click đúp chuột vào 1 bản ghi bất kỳ để thực hiện tiến trình!", "Thông Báo", 1);
        }
    }//GEN-LAST:event_btnSuaSpActionPerformed
    private void capNhatSanPham() {
        try {
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/bt201quanlybanhang?useUnicode=true&characterEncoding=UTF-8&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC", "root", "");

            String sqlUpd = "update cosmetics set cosmeticId=?, categoryId=?, cosmeticName=?, cosmeticCost=?, "
                    + "cosmeticInDate=?, cosmeticSellDate=?, cosmeticExpDate=?, cosmeticDetail=? where cosmeticId=?";

            PreparedStatement ps = conn.prepareStatement(sqlUpd);

            ps.setString(1, txtMaSanPham.getText());
            if (txtMaDanhMuc.getText().isEmpty()) {
                ps.setString(2, null);
            } else {
                ps.setString(2, txtMaDanhMuc.getText());
            }
            ps.setString(3, txtTenSanPham.getText());
            ps.setString(4, txtGia.getText());
            ps.setString(5, txtNgayNhap.getText());
            if (txtNgayBan.getText().isEmpty()) {
                ps.setString(6, null);
            } else {
                ps.setString(6, txtNgayBan.getText());
            }
            ps.setString(7, txtHsd.getText());
            ps.setString(8, txtMoTaSanPham.getText());
            ps.setString(9, maSanPhamDuocChon);

            maSanPhamDuocChon = null;

            ps.execute();

            ps.close();
            conn.close();

            JOptionPane.showMessageDialog(rootPane, "Cập nhật dữ liệu thành công!", "Thông Báo", 1);
        } catch (SQLException ex) {
            Logger.getLogger(DanhMucForm.class.getName()).log(Level.SEVERE, null, ex);
        }

        lamMoiFormSanPham();
    }

    private void btnThemSpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemSpActionPerformed
        if (txtMaSanPham.getText().isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Bạn chưa nhập Mã Sản Phẩm!", "Thông Báo", 1);
            return;
        }

        if (txtTenSanPham.getText().isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Bạn chưa nhập Tên Sản Phẩm!", "Thông Báo", 1);
            return;
        }

        if (txtGia.getText().isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Bạn chưa nhập Giá!", "Thông Báo", 1);
            return;
        }

        if (txtNgayNhap.getText().isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Bạn chưa nhập Ngày Nhập!", "Thông Báo", 1);
            return;
        }

        if (txtHsd.getText().isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Bạn chưa nhập Hạn Sử Dụng!", "Thông Báo", 1);
            return;
        }

        if (kiemTraNgayThang(txtNgayNhap.getText()) && kiemTraNgayThang(txtHsd.getText()) && txtGia.getText().matches(regexCost)) {
            if (txtNgayBan.getText().isEmpty()) {
                themSanPham();
            } else {
                if (kiemTraNgayThang(txtNgayBan.getText())) {
                    themSanPham();
                }
            }
        } else {
            if (!txtGia.getText().matches(regexCost)) {
                JOptionPane.showMessageDialog(rootPane, "Giá phải là Giá Trị SỐ!", "Thông Báo", 1);
            }
        }
    }//GEN-LAST:event_btnThemSpActionPerformed

    private void btnTimKiemMdmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimKiemMdmActionPerformed
        if (txtMaDanhMuc.getText().isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Bạn chưa nhập Mã Danh Mục!", "Thông Báo", 1);
        } else {
            danhSachSanPhamTimKiemMdm.clear();
            try {
                Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/bt201quanlybanhang?useUnicode=true&characterEncoding=UTF-8&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC", "root", "");

                String sqlSel = "select * from cosmetics where categoryId=?";

                PreparedStatement ps = conn.prepareStatement(sqlSel);

                ps.setString(1, txtMaDanhMuc.getText());

                ResultSet rs = ps.executeQuery();

                if (rs.next()) {
                    SanPham sanPham = new SanPham(rs.getString("cosmeticId"), rs.getString("categoryId"), rs.getString("cosmeticName"),
                            rs.getString("cosmeticCost"), rs.getString("cosmeticInDate"), rs.getString("cosmeticSellDate"), rs.getString("cosmeticExpDate"), rs.getString("cosmeticDetail"));
                    danhSachSanPhamTimKiemMdm.add(sanPham);
                    hienThiSanPhamTrongBang(2);
                    JOptionPane.showMessageDialog(rootPane, "Tìm kiếm thành công!", "Thông Báo", 1);
                } else {
                    JOptionPane.showMessageDialog(rootPane, "Không tìm thấy Sản phẩm nào có Mã danh mục là: " + txtMaDanhMuc.getText() + "!", "Thông Báo", 1);
                }

                rs.close();
                ps.close();
                conn.close();

            } catch (SQLException ex) {
                Logger.getLogger(DanhMucForm.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnTimKiemMdmActionPerformed

    private void btnTimKiemMspActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimKiemMspActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnTimKiemMspActionPerformed

    private void btnTimKiemTenSpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimKiemTenSpActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnTimKiemTenSpActionPerformed

    private void btnXoaSpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaSpActionPerformed
        if (banGhiSanPhamDuocChon) {
            banGhiSanPhamDuocChon = false;
            int xacNhanXoa = JOptionPane.showConfirmDialog(rootPane, "Bạn có chắc muốn Xóa Sản Phẩm này?", "Cảnh Báo", 2);
            if (xacNhanXoa == JOptionPane.YES_OPTION) {
                String maSanPham = txtMaSanPham.getText();

                String sqlDel = "delete from cosmetics where cosmeticId=?";

                try {
                    Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/bt201quanlybanhang?useUnicode=true&characterEncoding=UTF-8&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC", "root", "");

                    PreparedStatement ps = conn.prepareStatement(sqlDel);

                    ps.setString(1, maSanPham);

                    ps.execute();

                    ps.close();
                    conn.close();

                    JOptionPane.showMessageDialog(rootPane, "Cập nhật dữ liệu thành công!", "Thông Báo", 1);
                } catch (SQLException ex) {
                    Logger.getLogger(DanhMucForm.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else {
                JOptionPane.showMessageDialog(rootPane, "Không có bất kỳ sự Thay Đổi Dữ Liệu nào đã diễn ra", "Thông Báo", 1);
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Bạn chưa chọn đối tượng nào để Xóa!\nVui lòng click đúp chuột vào 1 bản ghi bất kỳ để thực hiện tiến trình!", "Thông Báo", 1);
        }
        lamMoiFormSanPham();
    }//GEN-LAST:event_btnXoaSpActionPerformed

    private void cbBoLocItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbBoLocItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_cbBoLocItemStateChanged

    public void themSanPham() {
        String maSanPham = txtMaSanPham.getText();
        String maDanhMuc = txtMaDanhMuc.getText();
        String tenSanPham = txtTenSanPham.getText();
        String gia = txtGia.getText();
        String moTaSanPham = txtMoTaSanPham.getText();

        String ngayNhap = txtNgayNhap.getText();
        String ngayBan = txtNgayBan.getText();
        String hsd = txtHsd.getText();

        try {
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/bt201quanlybanhang?useUnicode=true&characterEncoding=UTF-8&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC", "root", "");

            String sqlIns = "insert into cosmetics(cosmeticId, categoryId, cosmeticName, cosmeticCost, cosmeticInDate, cosmeticSellDate, cosmeticExpDate, cosmeticDetail) values(?, ?, ?, ?, ?, ?, ?, ?)";

            PreparedStatement ps = conn.prepareStatement(sqlIns);

            ps.setString(1, maSanPham);
            if (maDanhMuc.isEmpty()) {
                ps.setString(2, null);
            } else {
                ps.setString(2, maDanhMuc);
            }
            ps.setString(3, tenSanPham);
            ps.setString(4, gia);
            ps.setString(5, ngayNhap);
            if (ngayBan.isEmpty()) {
                ps.setString(6, null);
            } else {
                ps.setString(6, ngayBan);
            }
            ps.setString(7, hsd);
            if (moTaSanPham.isEmpty()) {
                ps.setString(8, null);
            } else {
                ps.setString(8, moTaSanPham);
            }

            ps.execute();
            ps.close();
            JOptionPane.showMessageDialog(rootPane, "Thêm Sản Phẩm thành công!", "Thêm Sản Phẩm", 1);

            conn.close();
        } catch (SQLException ex) {
            Logger.getLogger(SanPhamForm.class.getName()).log(Level.SEVERE, null, ex);
        }

        lamMoiFormSanPham();
    }

    public void lamMoiFormSanPham() {
        txtMaSanPham.setText("");
        txtMaDanhMuc.setText("");
        txtTenSanPham.setText("");
        txtGia.setText("");
        txtNgayNhap.setText("");
        txtNgayBan.setText("");
        txtHsd.setText("");
        txtMoTaSanPham.setText("");

        laySanPhamTuCsdl();
        hienThiSanPhamTrongBang(1);
    }

    public boolean kiemTraNgayThang(String st) {
        if (st.matches(regexDate)) {
            int ngay = Integer.parseInt(st.substring(st.lastIndexOf("-") + 1, st.length()));
            int thang = Integer.parseInt(st.substring(st.indexOf("-") + 1, st.lastIndexOf("-")));
            int nam = Integer.parseInt(st.substring(0, st.indexOf("-")));

            if ((1 <= ngay) && (ngay <= 31) && (1 <= thang) && (thang <= 12) && (1 <= nam)) {
                return true;
            } else {
                if (!((1 <= thang) && (thang <= 12))) {
                    JOptionPane.showMessageDialog(rootPane, "Tháng phải nằm trong khoảng từ 1 đến 12!", "Thông Báo", 1);
                }
                if (!(1 <= nam)) {
                    JOptionPane.showMessageDialog(rootPane, "Năm không được nhỏ hơn 1!", "Thông Báo", 1);
                }
                if (!((1 <= ngay) && (ngay <= 31))) {
                    JOptionPane.showMessageDialog(rootPane, "Ngày phải nằm trong khoảng từ 1 đến 31!", "Thông Báo", 1);
                }
                return false;
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Bạn đã nhập sai định dạng ngày tháng (yyyy-mm-dd)!", "Thông Báo", 1);
            return false;
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SanPhamForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SanPhamForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SanPhamForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SanPhamForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SanPhamForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSuaSp;
    private javax.swing.JButton btnThemSp;
    private javax.swing.JButton btnTimKiemMdm;
    private javax.swing.JButton btnTimKiemMsp;
    private javax.swing.JButton btnTimKiemTenSp;
    private javax.swing.JButton btnXoaSp;
    private javax.swing.JComboBox<String> cbBoLoc;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblSanPham;
    private javax.swing.JTextField txtGia;
    private javax.swing.JTextField txtHsd;
    private javax.swing.JTextField txtMaDanhMuc;
    private javax.swing.JTextField txtMaSanPham;
    private javax.swing.JTextArea txtMoTaSanPham;
    private javax.swing.JTextField txtNgayBan;
    private javax.swing.JTextField txtNgayNhap;
    private javax.swing.JTextField txtTenSanPham;
    // End of variables declaration//GEN-END:variables
}
